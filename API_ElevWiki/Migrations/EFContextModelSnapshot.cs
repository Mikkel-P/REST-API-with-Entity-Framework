// <auto-generated />
using System;
using API_ElevWiki.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API_ElevWiki.Migrations
{
    [DbContext(typeof(EFContext))]
    partial class EFContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API_ElevWiki.Models.AbscenceRecord", b =>
                {
                    b.Property<int>("abscenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("legalAbscence")
                        .HasColumnType("bit");

                    b.Property<int?>("studentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("abscenceId");

                    b.HasIndex("studentId");

                    b.ToTable("Abscences");
                });

            modelBuilder.Entity("API_ElevWiki.Models.ActivityRecord", b =>
                {
                    b.Property<int>("activeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("activeStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("studentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("activeId");

                    b.HasIndex("studentId");

                    b.ToTable("Actives");
                });

            modelBuilder.Entity("API_ElevWiki.Models.LoginHolder", b =>
                {
                    b.Property<int>("loginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("admin")
                        .HasColumnType("bit");

                    b.Property<string>("confirmationToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("confirmedEmail")
                        .HasColumnType("bit");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("passwordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("refreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("refreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("studentId")
                        .HasColumnType("int");

                    b.HasKey("loginId");

                    b.HasIndex("studentId");

                    b.ToTable("LoginHolders");
                });

            modelBuilder.Entity("API_ElevWiki.Models.NfcCard", b =>
                {
                    b.Property<int>("nfcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nfcTag")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int?>("studentId")
                        .HasColumnType("int");

                    b.HasKey("nfcId");

                    b.HasIndex("studentId");

                    b.ToTable("NfcCards");
                });

            modelBuilder.Entity("API_ElevWiki.Models.Student", b =>
                {
                    b.Property<int>("studentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("studentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("API_ElevWiki.Models.TimeRecord", b =>
                {
                    b.Property<int>("recId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("checkStatus")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int?>("studentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("timestamp")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.HasKey("recId");

                    b.HasIndex("studentId");

                    b.ToTable("TimeRecords");
                });

            modelBuilder.Entity("API_ElevWiki.Models.AbscenceRecord", b =>
                {
                    b.HasOne("API_ElevWiki.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("studentId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("API_ElevWiki.Models.ActivityRecord", b =>
                {
                    b.HasOne("API_ElevWiki.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("studentId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("API_ElevWiki.Models.LoginHolder", b =>
                {
                    b.HasOne("API_ElevWiki.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("studentId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("API_ElevWiki.Models.NfcCard", b =>
                {
                    b.HasOne("API_ElevWiki.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("studentId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("API_ElevWiki.Models.TimeRecord", b =>
                {
                    b.HasOne("API_ElevWiki.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("studentId");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
